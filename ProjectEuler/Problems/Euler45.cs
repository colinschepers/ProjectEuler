using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ProjectEuler
{
    public class Euler45
    {
        /*  Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
            Triangle	 	Tn=n(n+1)/2	 	1, 3, 6, 10, 15, ...
            Pentagonal	 	Pn=n(3n−1)/2	 	1, 5, 12, 22, 35, ...
            Hexagonal	 	Hn=n(2n−1)	 	1, 6, 15, 28, 45, ...
            It can be verified that T285 = P165 = H143 = 40755.

            Find the next triangle number that is also pentagonal and hexagonal.
          
            Tn    1, 3, 6, 10, 15, ...
            Td    2, 3, 4, 5, ...
            Tdd   1, 1, 1, ...

            Pn    1, 5, 12, 22, 35, ...
            Pd    4, 7, 10, 13, ...
            Pdd   3, 3, 3, ...

            Hn    1, 6, 15, 28, 45, ...
            Hd    5, 9, 13, 17, ...
            Hdd   4, 4, 4, ...
         */
         
        public uint Solve()
        {
            uint Tn = 1;
            uint Td = 2;
            const uint Tdd = 1;

            uint Pn = 1;
            uint Pd = 4;
            const uint Pdd = 3;

            uint Hn = 1;
            uint Hd = 5;
            const uint Hdd = 4;

            while (Tn <= 40755 || Tn != Pn || Pn != Hn)
            {
                // increase H once (H has the largest delta increase)
                Hn += Hd;
                Hd += Hdd;

                // increase P to close gap between P and H
                while (Pn < Hn)
                {
                    Pn += Pd;
                    Pd += Pdd;
                }

                // increase T to close gap between T and H
                while (Tn < Hn)
                {
                    Tn += Td;
                    Td += Tdd;
                }
            }

            return Tn;
        }
    }
}
